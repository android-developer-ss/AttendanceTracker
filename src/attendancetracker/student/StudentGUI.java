/******************************************************************************
 * Developed By: Snehal V Sutar. 
 * Net ID: svs130130
 * Class Name: StudentGUI
 * Function: UI Layer for ADD/DELETE/MODIFY student records. 
 * Patterns: Indirection, Pure Fabrication,Low Coupling.
 ******************************************************************************/

package attendancetracker.student;

import attendancetracker.GetterSetter;
import attendancetracker.MainScreen;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SnehalSutar
 */
public class StudentGUI extends javax.swing.JFrame {
    
    //Create object to handle the add delete modify function for student. 
      StudentDomainLayer stud;
      public static int clickedRowNumber;
      final int FIELD_EMPTY = 99;
      final int FIELDS_FILLED = 1;
        
    /**
     * Creates new form StudentStruct
     */
    public StudentGUI() {
        stud = new StudentDomainLayer();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentDetailsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        firstName = new javax.swing.JTextField();
        middleName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        studentID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        addrLine1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        addrLine2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        phoneNum = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ssnNum = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        emailID = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        modifyButton = new javax.swing.JButton();
        homePage = new javax.swing.JButton();
        statusBar = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        studentDetailsTable.setBackground(new java.awt.Color(255, 255, 204));
        studentDetailsTable.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        studentDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student ID", "First Name", "Middle Name", "Last Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentDetailsTable.setEnabled(false);
        studentDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentDetailsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(studentDetailsTable);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        firstName.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        firstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstNameFocusGained(evt);
            }
        });

        middleName.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        middleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                middleNameActionPerformed(evt);
            }
        });
        middleName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                middleNameFocusGained(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("* First Name");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("* Middle Name");
        jLabel2.setToolTipText("");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("* Last Name");
        jLabel3.setToolTipText("");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lastName.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        lastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lastNameFocusGained(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("* Student ID");
        jLabel4.setToolTipText("");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        studentID.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        studentID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentIDFocusGained(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel5.setText("Address Line 1");

        addrLine1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel6.setText("Address Line 2");

        addrLine2.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel7.setText("Phone Number");

        phoneNum.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        phoneNum.setText("0");
        phoneNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneNumKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel8.setText("SSN");

        ssnNum.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        ssnNum.setText("0");
        ssnNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ssnNumKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel9.setText("Email ID");

        emailID.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N

        addButton.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        modifyButton.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(34, 34, 34)
                        .addComponent(deleteButton)
                        .addGap(35, 35, 35)
                        .addComponent(modifyButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(firstName)
                            .addComponent(middleName, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(lastName)
                            .addComponent(studentID)
                            .addComponent(addrLine1)
                            .addComponent(addrLine2)
                            .addComponent(phoneNum)
                            .addComponent(ssnNum)
                            .addComponent(emailID))
                        .addGap(54, 54, 54))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(studentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(middleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(addrLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addrLine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(phoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(ssnNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(emailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(modifyButton))
                .addContainerGap())
        );

        homePage.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        homePage.setText("Home Page");
        homePage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homePageMouseClicked(evt);
            }
        });
        homePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageActionPerformed(evt);
            }
        });

        statusBar.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        statusBar.setText("Status Bar");

        refreshButton.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel10.setText("Student Enrollment");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshButton)
                        .addGap(33, 33, 33)
                        .addComponent(homePage)))
                .addContainerGap(85, Short.MAX_VALUE))
            .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homePage)
                    .addComponent(refreshButton)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBar))
        );

        JScrollPane1.setViewportView(jPanel1);

        getContentPane().add(JScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void middleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_middleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_middleNameActionPerformed

    private void homePageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homePageMouseClicked
        this.setVisible(false);
        dispose();
        MainScreen mainScr = new MainScreen();
        mainScr.setVisible(true);
    }//GEN-LAST:event_homePageMouseClicked
    
    
    
    /***************************************************************************
     * When the ADD student button is pressed:-
 1) StudentStruct list is checked if there is already a StudentStruct present with the
    same StudentStruct ID. If present display a message student is already 
    present. Else add the student in the Database.
 2) Refresh the StudentStruct display table to check for the new entry.
     * @param evt 
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        //Check if all the fields are filled. 
        int fields_filled = checkAllFields();
        
        if (fields_filled == FIELDS_FILLED){
        //Set the values using Getter Setter method. 
        GetterSetter getset = new GetterSetter();
        getset.setFirstName(firstName.getText());
        getset.setLastName(lastName.getText());
        getset.setMiddleName(middleName.getText());
        getset.setStudentID(studentID.getText());
        
        //Create object of StudentStruct structure and pass it to DOmain Layer. 
        StudentStruct student = new StudentStruct();
        student.firstName  = firstName.getText();
        student.middleName = middleName.getText();
        student.lastName   = lastName.getText();
        student.studentID  = studentID.getText();
        student.addrLine1  = addrLine1.getText();
        student.addrLine2  = addrLine2.getText();
        if(emailID.getText().equals("")) student.emailID = "No Email";
        else  student.emailID    = emailID.getText();
        if(!ssnNum.getText().equals(""))
        student.ssnNum     = Integer.parseInt(ssnNum.getText());
        if(!phoneNum.getText().equals(""))
        student.phoneNum   = Integer.parseInt(phoneNum.getText());
        
        String msg = stud.addStudent(student);
        statusBar.setText(msg);
        //Refresh the student display table, so that the new entry is visible in
        // the table. 
        refreshStudentTable();
        //Refresh all fields. 
        refreshAllFields();
        }
    }//GEN-LAST:event_addButtonActionPerformed
    
    
    
    /***************************************************************************
     * Check if all Fields which are marked as mandatory are filled. If not then
     * set the background of the field to PINK Color.
     * @return 
     **************************************************************************/
    public int checkAllFields(){
        
        int errMsg=0;
        
        if(studentID.getText().equals("")){
            studentID.setBackground(Color.pink);
            errMsg =  FIELD_EMPTY;
        }
        
        if(firstName.getText().equals("")){
            firstName.setBackground(Color.pink);
            errMsg = FIELD_EMPTY;
        }
        
        if(middleName.getText().equals("")){
            middleName.setBackground(Color.pink);
            errMsg = FIELD_EMPTY;
        }
        
        if(lastName.getText().equals("")){
            lastName.setBackground(Color.pink);
            errMsg = FIELD_EMPTY;
        }
        
        if (errMsg == FIELD_EMPTY){
        statusBar.setText("Please fill all the Fields marked in RED.");
        return errMsg;
        }
        return FIELDS_FILLED;
    }
    private void homePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageActionPerformed
        this.setVisible(false);
        dispose();
        MainScreen mainScr = new MainScreen();
        mainScr.setVisible(true);
    }//GEN-LAST:event_homePageActionPerformed
    
    
    
    
    /***************************************************************************
     * When StudentStruct window is activated:-
 1) The table should be refreshed, filled from the values present in the 
 database. 
     * 2) The screen should be set to the center of the screen. 
     * @param evt 
     **************************************************************************/
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        //Set window to the center of the screen. 
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //Fill the table.
        refreshStudentTable();
        deleteButton.setEnabled(false);
        modifyButton.setEnabled(false);
    }//GEN-LAST:event_formWindowActivated
    
    
    
    /***************************************************************************
     * Reload the StudentStruct table from Database and display in the display table.
     **************************************************************************/
    public void refreshStudentTable(){
        DefaultTableModel model = new DefaultTableModel();
        model = stud.updateTable(studentDetailsTable);  
        studentDetailsTable.setModel(model);
    }
   
    
    
    /***************************************************************************
     * When user clicks a row in the table, the entries in the table row which 
     * is clicked should be displayed in the respective text fields. 
     * @param evt 
     **************************************************************************/
    private void studentDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentDetailsTableMouseClicked
        clickedRowNumber = studentDetailsTable.rowAtPoint(evt.getPoint());
        //Check if Row number is an valid row number.
        if (clickedRowNumber >= 0) {
            StudentDomainLayer studProc = new StudentDomainLayer();
            StudentStruct stud = new StudentStruct();
            stud = studProc.getValuesAtRow(clickedRowNumber);
            firstName.setText(stud.firstName);
            middleName.setText(stud.middleName);
            lastName.setText(stud.lastName);
            studentID.setText(stud.studentID);
            addrLine1.setText(stud.addrLine1);
            addrLine2.setText(stud.addrLine2);
            ssnNum.setText(String.valueOf(stud.ssnNum));
            phoneNum.setText(String.valueOf(stud.phoneNum));
            emailID.setText(stud.emailID);
        }
        deleteButton.setEnabled(true);
        modifyButton.setEnabled(true);
    }//GEN-LAST:event_studentDetailsTableMouseClicked
    
    
    
    /***************************************************************************
     * Delete the entry which is being clicked and displayed in the fields. 
     * @param evt 
     **************************************************************************/
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String str;
        str = new String();
        StudentDomainLayer studProc = new StudentDomainLayer();
        str = studProc.deleteRecordWithRow(clickedRowNumber);
        statusBar.setText(str);
        //Refresh the student display table, so that the new entry is visible in
        // the table. 
        refreshStudentTable();
        //Refresh all fields. 
        refreshAllFields();
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    
    /***************************************************************************
     * When refresh button is pressed all the fields should be refreshed and 
     * table should also be refreshed. 
     * @param evt 
     **************************************************************************/
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refreshAllFields();
        statusBar.setText("Status Bar");
    }//GEN-LAST:event_refreshButtonActionPerformed
    
    
    /***************************************************************************
     * Modify the record which is clicked. 
     * @param evt 
     **************************************************************************/
    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        String str;
        str = new String();
        StudentDomainLayer studProc = new StudentDomainLayer();
        
        StudentStruct studClicked = new StudentStruct();
        studClicked.firstName  = firstName.getText();
        studClicked.middleName = middleName.getText();
        studClicked.lastName   = lastName.getText();
        studClicked.studentID  = studentID.getText();
        studClicked.addrLine1  = addrLine1.getText();
        studClicked.addrLine2  = addrLine2.getText();
        studClicked.phoneNum   = Integer.parseInt(phoneNum.getText());
        studClicked.ssnNum     = Integer.parseInt(ssnNum.getText());
        studClicked.emailID  = emailID.getText();
        
        str = studProc.modifyRecordWithRow(clickedRowNumber,studClicked);
        statusBar.setText(str);
        //Refresh the student display table, so that the new entry is visible in
        // the table. 
        refreshStudentTable();
        //Refresh all fields. 
        refreshAllFields();
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void studentIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentIDFocusGained
        studentID.setBackground(Color.white);
    }//GEN-LAST:event_studentIDFocusGained

    private void firstNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameFocusGained
        firstName.setBackground(Color.white);
    }//GEN-LAST:event_firstNameFocusGained

    private void middleNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_middleNameFocusGained
        middleName.setBackground(Color.white);
    }//GEN-LAST:event_middleNameFocusGained

    private void lastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameFocusGained
        lastName.setBackground(Color.white);
    }//GEN-LAST:event_lastNameFocusGained

    private void phoneNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneNumKeyPressed
        //Allow only Numeric fields to be entered by the user in the code. 
        //If user enters anything other than the numbers informative pop up is
        // displayed.
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == java.awt.event.KeyEvent.VK_BACK_SPACE)
                || (c == java.awt.event.KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Enter only numbers");
            if (!((c >= '0') && (c <= '9'))) {
                phoneNum.setText("");
            }
        }
    }//GEN-LAST:event_phoneNumKeyPressed

    private void ssnNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssnNumKeyPressed
        //Allow only Numeric fields to be entered by the user in the code. 
        //If user enters anything other than the numbers informative pop up is
        // displayed.
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == java.awt.event.KeyEvent.VK_BACK_SPACE)
                || (c == java.awt.event.KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Enter only numbers");
            if (!((c >= '0') && (c <= '9'))) {
                ssnNum.setText("");
            }
        }
    }//GEN-LAST:event_ssnNumKeyPressed
    
    
    /***************************************************************************
     * Refresh all the text Fields. Set them to blank. 
     * Reload the table with new entries.
     **************************************************************************/
    public void refreshAllFields(){
        firstName.setText("");
        middleName.setText("");
        lastName.setText("");
        studentID.setText("");
        addrLine1.setText("");
        addrLine1.setText("");
        addrLine2.setText("");
        phoneNum.setText("0");
        ssnNum.setText("0");
        emailID.setText("");
        
        deleteButton.setEnabled(false);
        modifyButton.setEnabled(false);
        
    }
    
    
    /***************************************************************************
     * @param args the command line arguments
     **************************************************************************/
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane1;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addrLine1;
    private javax.swing.JTextField addrLine2;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailID;
    private javax.swing.JTextField firstName;
    private javax.swing.JButton homePage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lastName;
    private javax.swing.JTextField middleName;
    private javax.swing.JButton modifyButton;
    private javax.swing.JTextField phoneNum;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField ssnNum;
    private javax.swing.JLabel statusBar;
    private javax.swing.JTable studentDetailsTable;
    private javax.swing.JTextField studentID;
    // End of variables declaration//GEN-END:variables
}
