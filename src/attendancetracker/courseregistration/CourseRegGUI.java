/******************************************************************************
 * Developed By: Snehal V Sutar. 
 * Net ID: svs130130
 * Class Name: CourseRegGUI
 * Function: UI Layer for ADD/DELETE/MODIFY course Registration. 
 * Patterns: Indirection, Pure Fabrication,Low Coupling.
 ******************************************************************************/

package attendancetracker.courseregistration;
import attendancetracker.MainScreen;
import attendancetracker.course.CourseStruct;
import attendancetracker.course.CourseDomainLayer;
import attendancetracker.student.StudentDomainLayer;
import attendancetracker.student.StudentStruct;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author SnehalSutar
 */
public class CourseRegGUI extends javax.swing.JFrame {
    //Create object to handle the add delete modify function for student. 
      CourseRegDomainLayer courseReg;
      public static int clickedRowNumber;
      final int FIELD_EMPTY = 99;
      final int FIELDS_FILLED = 1;
      final static String noCourse = "No Course";
      final static String OK = "OK";
    /**
     * Creates new form CourseStructRegistration
     */
    public CourseRegGUI() {
        courseReg = new CourseRegDomainLayer();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        studentIDCombo = new javax.swing.JComboBox();
        course1Combo = new javax.swing.JComboBox();
        course2Combo = new javax.swing.JComboBox();
        course3Combo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        courseRegTable = new javax.swing.JTable();
        registerButton = new javax.swing.JButton();
        dropButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        statusBar = new javax.swing.JLabel();
        course1Name = new javax.swing.JLabel();
        course2Name = new javax.swing.JLabel();
        course3Name = new javax.swing.JLabel();
        studentName = new javax.swing.JLabel();
        homePage = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        dropCourse1 = new javax.swing.JCheckBox();
        dropCourse2 = new javax.swing.JCheckBox();
        dropCourse3 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1099, 611));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(820, 500));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jScrollPane1, org.jdesktop.beansbinding.ELProperty.create("${viewportBorder}"), jScrollPane1, org.jdesktop.beansbinding.BeanProperty.create("background"));
        bindingGroup.addBinding(binding);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(820, 500));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jScrollPane1, org.jdesktop.beansbinding.ELProperty.create("${viewportBorder}"), jPanel1, org.jdesktop.beansbinding.BeanProperty.create("border"));
        bindingGroup.addBinding(binding);

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel1.setText("* Student ID");

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel2.setText("Course 1");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel3.setText("Course 2");

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel4.setText("Course 3");

        studentIDCombo.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        studentIDCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select one" }));
        studentIDCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                studentIDComboItemStateChanged(evt);
            }
        });
        studentIDCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentIDComboFocusGained(evt);
            }
        });

        course1Combo.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        course1Combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Course" }));
        course1Combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                course1ComboItemStateChanged(evt);
            }
        });
        course1Combo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                course1ComboPropertyChange(evt);
            }
        });

        course2Combo.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        course2Combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Course" }));
        course2Combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                course2ComboItemStateChanged(evt);
            }
        });

        course3Combo.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        course3Combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Course" }));
        course3Combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                course3ComboItemStateChanged(evt);
            }
        });

        courseRegTable.setBackground(new java.awt.Color(204, 204, 255));
        courseRegTable.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        courseRegTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        courseRegTable.setEnabled(false);
        courseRegTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                courseRegTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(courseRegTable);

        registerButton.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        dropButton.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        dropButton.setText("Add / Drop Course");
        dropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel5.setText("Course Registration");

        statusBar.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        statusBar.setText("Status Bar");

        homePage.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        homePage.setText("Home Page");
        homePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageActionPerformed(evt);
            }
        });

        refreshButton.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        dropCourse1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        dropCourse1.setText("Drop Course 1");
        dropCourse1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dropCourse1StateChanged(evt);
            }
        });

        dropCourse2.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        dropCourse2.setText("Drop Course 2");

        dropCourse3.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        dropCourse3.setText("Drop Course 3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(jLabel5)
                .addGap(80, 80, 80)
                .addComponent(homePage)
                .addGap(57, 57, 57)
                .addComponent(refreshButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(course1Combo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(studentIDCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(course2Combo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(course3Combo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(studentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(course1Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(course2Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(course3Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(registerButton)
                                    .addComponent(dropCourse1))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(dropCourse2)
                                        .addGap(33, 33, 33)
                                        .addComponent(dropCourse3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(dropButton)))))
                        .addGap(44, 44, 44)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(homePage)
                        .addComponent(jLabel5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(studentIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentName))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(course1Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(course1Name)))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(course2Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(course2Name))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(course3Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(course3Name))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dropCourse2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dropCourse1)
                                .addComponent(dropCourse3)))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(registerButton)
                            .addComponent(dropButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(statusBar))
        );

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
       this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
       
       // When the window is activated populate all the combo boxes with 
       // respective values.
        CourseDomainLayer courseProc = new CourseDomainLayer();
        CourseStruct courseArray[] = courseProc.getCourseList();
        CourseStruct course;
        for(int i= 0; i<courseProc.numOfCourses;i++){
            course = new CourseStruct();
            course = courseArray[i];
            course1Combo.addItem(course.courseID);
            course2Combo.addItem(course.courseID);
            course3Combo.addItem(course.courseID);
        }
        
        StudentDomainLayer studProc = new StudentDomainLayer();
        StudentStruct studArray[] = studProc.getStudentList();
        StudentStruct stud;
        for(int i= 0; i<studProc.numOfStudents;i++){
            stud = new StudentStruct();
            stud = studArray[i];
            studentIDCombo.addItem(stud.studentID);
        }
        
        refreshCourseRegTable();
        dropCourse1.setEnabled(false);
        dropCourse2.setEnabled(false);
        dropCourse3.setEnabled(false);
        dropButton.setEnabled(false);
        registerButton.setEnabled(true);
    }//GEN-LAST:event_formWindowActivated

    private void course1ComboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_course1ComboPropertyChange
       
    }//GEN-LAST:event_course1ComboPropertyChange

    private void course1ComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_course1ComboItemStateChanged
        CourseDomainLayer courseProc = new CourseDomainLayer();
        CourseStruct courseArray[] = courseProc.getCourseList();
        CourseStruct course;
        course1Name.setText("");
        for(int i= 0; i<courseProc.numOfCourses;i++){
            course = new CourseStruct();
            course = courseArray[i];
            
            if(evt.getItem().equals(course.courseID) ){
                course1Name.setText(course.courseName);
            }
        }
    }//GEN-LAST:event_course1ComboItemStateChanged

    private void course2ComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_course2ComboItemStateChanged
         CourseDomainLayer courseProc = new CourseDomainLayer();
        CourseStruct courseArray[] = courseProc.getCourseList();
        CourseStruct course;
        course2Name.setText("");
        for(int i= 0; i<courseProc.numOfCourses;i++){
            course = new CourseStruct();
            course = courseArray[i];
            
            if(evt.getItem().equals(course.courseID) ){
                course2Name.setText(course.courseName);
            }
        }
    }//GEN-LAST:event_course2ComboItemStateChanged

    private void course3ComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_course3ComboItemStateChanged
        CourseDomainLayer courseProc = new CourseDomainLayer();
        CourseStruct courseArray[] = courseProc.getCourseList();
        CourseStruct course;
        course3Name.setText("");
        for(int i= 0; i<courseProc.numOfCourses;i++){
            course = new CourseStruct();
            course = courseArray[i];
            
            if(evt.getItem().equals(course.courseID) ){
                course3Name.setText(course.courseName);
            }
        }
    }//GEN-LAST:event_course3ComboItemStateChanged

    private void studentIDComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_studentIDComboItemStateChanged
        StudentDomainLayer studProc = new StudentDomainLayer();
        StudentStruct studArray[] = studProc.getStudentList();
        StudentStruct stud;
        studentName.setText("");
        for(int i= 0; i<studProc.numOfStudents;i++){
            stud = new StudentStruct();
            stud = studArray[i];
            
            if(evt.getItem().equals(stud.studentID) ){
                String str = stud.firstName + " " + stud.middleName + " " + stud.lastName;
                studentName.setText(str);
            }
        }
    }//GEN-LAST:event_studentIDComboItemStateChanged

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        
        int errMsg = checkAllFields();
        
        if(errMsg == 0){

        CourseRegStruct courseReg= new CourseRegStruct();
        
        //Get fields selected on the screen. 
        courseReg = getCourseReg();
       
        CourseRegDomainLayer courseRegProc = new CourseRegDomainLayer();
        String msg = courseRegProc.addCourseReg(courseReg);
        statusBar.setText(msg);
        //Refresh the student display table, so that the new entry is visible in
        // the table. 
        refreshCourseRegTable();
        //Refresh all fields. 
        refreshAllFields();
        }
    }//GEN-LAST:event_registerButtonActionPerformed
     /***************************************************************************
     * Check if all Fields which are marked as mandatory are filled. If not then
     * set the background of the field to PINK Color.
     * @return 
     **************************************************************************/
    public int checkAllFields(){
        
        int errMsg=0;
        
        if(studentIDCombo.getSelectedIndex()== 0){
            studentIDCombo.setBackground(Color.pink);
            errMsg =  FIELD_EMPTY;
            statusBar.setText("Please fill all the Fields marked in RED.");
            return errMsg;
        }
        
        if((course1Combo.getSelectedIndex() == 0)&&
            course2Combo.getSelectedIndex() == 0 &&
            course3Combo.getSelectedIndex() == 0){
            errMsg =  FIELD_EMPTY;
            statusBar.setText("Please select atleast one course.");
            return errMsg;
        }
        
//        if(courseName.getText().equals("")){
//            courseName.setBackground(Color.pink);
//            errMsg =  FIELD_EMPTY;
//        }
        
        if (errMsg == FIELD_EMPTY){
        statusBar.setText("Please fill all the Fields marked in RED.");
        return errMsg;
        }
        return errMsg;
    } 
    
    /***************************************************************************
     * Getter method for getting all the selected Items on GUI.
     * @return 
     **************************************************************************/
    public CourseRegStruct getCourseReg(){
        CourseRegStruct courseReg;
        courseReg = new CourseRegStruct();
        
        courseReg.studentID = (String) studentIDCombo.getSelectedItem();
        
        if(course1Combo.getSelectedIndex() == 0) courseReg.courseID1 = noCourse;
        else   courseReg.courseID1 = (String) course1Combo.getSelectedItem();
        
        if(course2Combo.getSelectedIndex() == 0) courseReg.courseID2 = noCourse;
        else courseReg.courseID2 = (String) course2Combo.getSelectedItem();
        
        if(course3Combo.getSelectedIndex() == 0) courseReg.courseID3 = noCourse;
        else courseReg.courseID3 = (String) course3Combo.getSelectedItem();
        
        return courseReg;
    }
    /***************************************************************************
    * When user clicks a row in the table, the entries in the table row which 
    * is clicked should be displayed in the respective text fields. 
    * @param evt 
    ***************************************************************************/
    private void courseRegTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseRegTableMouseClicked
        clickedRowNumber = courseRegTable.rowAtPoint(evt.getPoint());
        
        //Check if Row number is an valid row number.
        if (clickedRowNumber >= 0) {
            CourseRegDomainLayer courseRegProc = new CourseRegDomainLayer();
            CourseRegStruct courseReg = new CourseRegStruct();
            courseReg = courseRegProc.getValuesAtRow(clickedRowNumber);
            studentIDCombo.setSelectedItem(courseReg.studentID);
            
            //Enable Drop Course1 Checkbox only if CourseStruct 1 has been registered.
            if(courseReg.courseID1.equals(noCourse)) {
                course1Combo.setSelectedIndex(0);
                dropCourse1.setEnabled(false);
                course1Combo.setEnabled(true);
            }
            else{
                course1Combo.setSelectedItem(courseReg.courseID1);
                dropCourse1.setEnabled(true);
                course1Combo.setEnabled(false);
            }
            
            //Enable Drop Course2 Checkbox only if CourseStruct 2 has been registered.
             if(courseReg.courseID2.equals(noCourse)) {
                course2Combo.setSelectedIndex(0);
                dropCourse2.setEnabled(false);
                course2Combo.setEnabled(true);
             }
            else{
                course2Combo.setSelectedItem(courseReg.courseID2);
                dropCourse2.setEnabled(true);
                course2Combo.setEnabled(false);
        
            }
             
            //Enable Drop Course3 Checkbox only if CourseStruct 3 has been registered.
            if(courseReg.courseID3.equals(noCourse)) {
                course3Combo.setSelectedIndex(0);
                dropCourse3.setEnabled(false);
                course3Combo.setEnabled(true);
            }
            else{
                course3Combo.setSelectedItem(courseReg.courseID3);
                dropCourse3.setEnabled(true);
                course3Combo.setEnabled(false);
            }       
        }
        studentIDCombo.setEnabled(false);
//        course1Combo.setEnabled(false);
//        course2Combo.setEnabled(false);
//        course3Combo.setEnabled(false);
        registerButton.setEnabled(false);
        dropButton.setEnabled(true);
        
    }//GEN-LAST:event_courseRegTableMouseClicked

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        //Refresh the student display table, so that the new entry is visible in
        // the table. 
        refreshCourseRegTable();        
        //Refresh all fields. 
        refreshAllFields();
        statusBar.setText("Status Bar");
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void homePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageActionPerformed
        this.setVisible(false);
        dispose();
        MainScreen mainScr = new MainScreen();
        mainScr.setVisible(true);
    }//GEN-LAST:event_homePageActionPerformed

    private void dropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropButtonActionPerformed
        if(dropCourse1.isSelected()){statusBar.setText("DROP COURSE1");}
        
        String str;
        str = new String();
        CourseRegDomainLayer courseRegProc = new CourseRegDomainLayer();
        
        CourseRegStruct courseClicked = new CourseRegStruct();
        courseClicked.studentID     = (String) studentIDCombo.getSelectedItem();
        
        if(dropCourse1.isSelected()) courseClicked.courseID1 = noCourse;
        else
          courseClicked.courseID1     = (String) course1Combo.getSelectedItem();
        
        if(dropCourse2.isSelected()) courseClicked.courseID2 = noCourse;
        else
        courseClicked.courseID2     = (String) course2Combo.getSelectedItem();
        
        if(dropCourse3.isSelected()) 
            courseClicked.courseID3 = noCourse;
        else
        courseClicked.courseID3     = (String) course3Combo.getSelectedItem();
        
        
        str = courseRegProc.modifyRecordWithRow(clickedRowNumber,courseClicked);
        statusBar.setText(str);
        if(str.equals(OK)){
        statusBar.setText("Course Registration modified for Student ID: " + courseClicked.studentID);
        //Refresh the student display table, so that the new entry is visible in
        // the table. 
        refreshCourseRegTable();
        //Refresh all fields. 
        refreshAllFields();
        }
        
        
    }//GEN-LAST:event_dropButtonActionPerformed

    private void dropCourse1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dropCourse1StateChanged
//        if(dropCourse1.isSelected()){statusBar.setText("DROP COURSE1");}
//        else statusBar.setText("DROP COURSE not selected");
    }//GEN-LAST:event_dropCourse1StateChanged

    private void studentIDComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentIDComboFocusGained
        studentIDCombo.setBackground(Color.white);
    }//GEN-LAST:event_studentIDComboFocusGained

    /***************************************************************************
     * Reload the StudentStruct table from Database and display in the display table.
     **************************************************************************/
    public void refreshCourseRegTable(){
        DefaultTableModel model = new DefaultTableModel();
        model = courseReg.updateTable(courseRegTable);  
        courseRegTable.setModel(model);
    }
    
    /***************************************************************************
     * Refresh all the text Fields. Set them to blank. 
     * Reload the table with new entries.
     **************************************************************************/
    public void refreshAllFields(){
        studentIDCombo.setSelectedIndex(0);
        course1Combo.setSelectedIndex(0);
        course2Combo.setSelectedIndex(0);
        course3Combo.setSelectedIndex(0);
        
        dropCourse1.setEnabled(false);
        dropCourse2.setEnabled(false);
        dropCourse3.setEnabled(false);
        dropButton.setEnabled(false);
        registerButton.setEnabled(true);
        studentIDCombo.setEnabled(true);
        course1Combo.setEnabled(true);
        course2Combo.setEnabled(true);
        course3Combo.setEnabled(true);
        
        dropCourse1.setSelected(false);
        dropCourse2.setSelected(false);
        dropCourse3.setSelected(false);
        
        studentName.setText("");
        course1Name.setText("");
        course2Name.setText("");
        course3Name.setText("");
    }
    
    /**************************************************************************/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseRegGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseRegGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseRegGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseRegGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseRegGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox course1Combo;
    private javax.swing.JLabel course1Name;
    private javax.swing.JComboBox course2Combo;
    private javax.swing.JLabel course2Name;
    private javax.swing.JComboBox course3Combo;
    private javax.swing.JLabel course3Name;
    private javax.swing.JTable courseRegTable;
    private javax.swing.JButton dropButton;
    private javax.swing.JCheckBox dropCourse1;
    private javax.swing.JCheckBox dropCourse2;
    private javax.swing.JCheckBox dropCourse3;
    private javax.swing.JButton homePage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel statusBar;
    private javax.swing.JComboBox studentIDCombo;
    private javax.swing.JLabel studentName;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
